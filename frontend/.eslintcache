[{"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\index.js":"1","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\store.js":"2","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\App.js":"3","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reportWebVitals.js":"4","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reducers\\productReducers.js":"5","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Header.js":"6","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Footer.js":"7","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\HomeScreen.js":"8","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ProductScreen.js":"9","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Message.js":"10","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Product.js":"11","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Loader.js":"12","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Rating.js":"13","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\constants\\productConstants.js":"14","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\actions\\productActions.js":"15","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\CartScreen.js":"16","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reducers\\cartReducers.js":"17","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\constants\\cartConstants.js":"18","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\actions\\cartActions.js":"19","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reducers\\userReducers.js":"20","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\constants\\userConstants.js":"21","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\LoginScreen.js":"22","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\actions\\userActions.js":"23","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\FormContainer.js":"24","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\RegisterScreen.js":"25","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ProfileScreen.js":"26","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ShippingScreen.js":"27","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\CheckoutSteps.js":"28","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\PaymentScreen.js":"29","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reducers\\orderReducers.js":"31","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\constants\\orderConstants.js":"32","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\actions\\orderActions.js":"33","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\OrderScreen.js":"34","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\UserListScreen.js":"35","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\UserEditScreen.js":"36","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ProductListScreen.js":"37","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ProductEditScreen.js":"38","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\OrderListScreen.js":"39","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\SearchBox.js":"40","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Paginate.js":"41","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\ProductCarousel.js":"42","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\logo.js":"43"},{"size":630,"mtime":1652281115433,"results":"44","hashOfConfig":"45"},{"size":2446,"mtime":1653587235063,"results":"46","hashOfConfig":"45"},{"size":2209,"mtime":1653502405124,"results":"47","hashOfConfig":"45"},{"size":362,"mtime":1651841762642,"results":"48","hashOfConfig":"45"},{"size":3945,"mtime":1653587545730,"results":"49","hashOfConfig":"45"},{"size":2560,"mtime":1653592867507,"results":"50","hashOfConfig":"45"},{"size":316,"mtime":1651845268612,"results":"51","hashOfConfig":"45"},{"size":1474,"mtime":1653591601671,"results":"52","hashOfConfig":"45"},{"size":7927,"mtime":1653584638193,"results":"53","hashOfConfig":"45"},{"size":218,"mtime":1652273544930,"results":"54","hashOfConfig":"45"},{"size":939,"mtime":1652109604167,"results":"55","hashOfConfig":"45"},{"size":405,"mtime":1652273338294,"results":"56","hashOfConfig":"45"},{"size":1440,"mtime":1652104480914,"results":"57","hashOfConfig":"45"},{"size":1524,"mtime":1653587074767,"results":"58","hashOfConfig":"45"},{"size":6023,"mtime":1653587318075,"results":"59","hashOfConfig":"45"},{"size":3805,"mtime":1652889868582,"results":"60","hashOfConfig":"45"},{"size":1312,"mtime":1652897331838,"results":"61","hashOfConfig":"45"},{"size":296,"mtime":1652896543258,"results":"62","hashOfConfig":"45"},{"size":1365,"mtime":1652884829901,"results":"63","hashOfConfig":"45"},{"size":3869,"mtime":1653337830540,"results":"64","hashOfConfig":"45"},{"size":1508,"mtime":1653337726510,"results":"65","hashOfConfig":"45"},{"size":2189,"mtime":1652621391529,"results":"66","hashOfConfig":"45"},{"size":7230,"mtime":1653352646910,"results":"67","hashOfConfig":"45"},{"size":345,"mtime":1652615783766,"results":"68","hashOfConfig":"45"},{"size":3286,"mtime":1652622346467,"results":"69","hashOfConfig":"45"},{"size":5246,"mtime":1653337701381,"results":"70","hashOfConfig":"45"},{"size":2868,"mtime":1652888699228,"results":"71","hashOfConfig":"45"},{"size":1282,"mtime":1652882864031,"results":"72","hashOfConfig":"45"},{"size":1549,"mtime":1652888625037,"results":"73","hashOfConfig":"45"},{"size":5097,"mtime":1652897333333,"results":"74","hashOfConfig":"45"},{"size":3501,"mtime":1653503136421,"results":"75","hashOfConfig":"45"},{"size":1268,"mtime":1653502960770,"results":"76","hashOfConfig":"45"},{"size":5823,"mtime":1653503246162,"results":"77","hashOfConfig":"45"},{"size":7226,"mtime":1653573124778,"results":"78","hashOfConfig":"45"},{"size":3600,"mtime":1653417936477,"results":"79","hashOfConfig":"45"},{"size":3170,"mtime":1653429987816,"results":"80","hashOfConfig":"45"},{"size":4980,"mtime":1653586702093,"results":"81","hashOfConfig":"45"},{"size":8141,"mtime":1653591152446,"results":"82","hashOfConfig":"45"},{"size":3559,"mtime":1653502727629,"results":"83","hashOfConfig":"45"},{"size":965,"mtime":1653591599881,"results":"84","hashOfConfig":"45"},{"size":763,"mtime":1653586672913,"results":"85","hashOfConfig":"45"},{"size":1277,"mtime":1653591608277,"results":"86","hashOfConfig":"45"},{"size":182,"mtime":1653592772732,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1r042yq",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\index.js",[],["184","185"],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\store.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\App.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reportWebVitals.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reducers\\productReducers.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Header.js",["186","187","188"],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Footer.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\HomeScreen.js",["189"],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ProductScreen.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Message.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Product.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Loader.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Rating.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\constants\\productConstants.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\actions\\productActions.js",["190"],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\CartScreen.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reducers\\cartReducers.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\constants\\cartConstants.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\actions\\cartActions.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reducers\\userReducers.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\constants\\userConstants.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\LoginScreen.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\actions\\userActions.js",["191","192","193"],"import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n\r\n  USER_LOGOUT,\r\n  \r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,  \r\n  USER_UPDATE_PROFILE_RESET,\r\n\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,  \r\n  USER_LIST_RESET, \r\n\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,  \r\n  USER_DELETE_RESET,  \r\n\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,  \r\n  USER_UPDATE_RESET,  \r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_LOGIN_REQUEST\r\n      })\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json'\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n          '/api/users/login/',\r\n          { 'username': email, 'password': password },\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_LOGIN_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({type: USER_LOGOUT})\r\n  dispatch({type: USER_DETAILS_RESET})\r\n  dispatch({type: ORDER_LIST_MY_RESET})\r\n  dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_REGISTER_REQUEST\r\n      })\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json'\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n          '/api/users/register/',\r\n          { 'name': name, 'email': email, 'password': password },\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_REGISTER_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n      dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_REGISTER_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_DETAILS_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/users/${id}/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_DETAILS_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_DETAILS_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_UPDATE_PROFILE_REQUEST\r\n      })\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n          `/api/users/profile/update/`,\r\n          user,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_UPDATE_PROFILE_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_UPDATE_PROFILE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_LIST_REQUEST\r\n      })\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/users/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_LIST_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_LIST_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_DELETE_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.delete(\r\n          `/api/users/delete/${id}/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_DELETE_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_DELETE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: USER_UPDATE_REQUEST\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n          `/api/users/update/${user._id}/`,\r\n          user,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_UPDATE_SUCCESS,\r\n      })\r\n\r\n      dispatch({\r\n        type: USER_DETAILS_SUCCESS,\r\n        payload: data\r\n      })\r\n\r\n\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: USER_UPDATE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\n","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\FormContainer.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\RegisterScreen.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ProfileScreen.js",["194"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({history}) {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error, loading, user } = userDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector(state => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n      if (!userInfo) {\r\n          history.push('/login')\r\n      } else {\r\n        if(!user || !user.name || success || userInfo._id !== user._id) {\r\n          dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n          dispatch(getUserDetails('profile'))\r\n          dispatch(listMyOrders())\r\n        } else {\r\n          setName(user.name)\r\n          setEmail(user.email)\r\n        }\r\n      }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault()\r\n\r\n      if(password !== confirmPassword){\r\n        setMessage('Password do not match!!')\r\n      } else {\r\n        dispatch(updateUserProfile({\r\n          'id': user._id,\r\n          'name': name,\r\n          'email': email,\r\n          'password': password\r\n        }))\r\n        setMessage('')\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n\r\n      <Form.Group controlId='name'>\r\n        <Form.Label>Your Name</Form.Label>\r\n        <Form.Control\r\n          required\r\n          type='name'\r\n          placeholder='Enter Name'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        >\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='email'>\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n          required\r\n          type='email'\r\n          placeholder='Enter Email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        >\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='password'>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control          \r\n          type='password'\r\n          placeholder='Enter Password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        >\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='passwordConfirm'>\r\n        <Form.Label>Confirm Password</Form.Label>\r\n        <Form.Control          \r\n          type='password'\r\n          placeholder='Confirm Password'\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        >\r\n        </Form.Control>\r\n      </Form.Group>\r\n      \r\n\r\n      <Button type='submit' variant='primary'>\r\n          Update\r\n        </Button>\r\n      </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0,10)}</td>\r\n                  <td>$ {order.totalPrice}</td>\r\n                  <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ShippingScreen.js",["195","196"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [address, setAddress] = useState(shippingAddress?.address) // shippingAddress.adress\r\n  const [city, setCity] = useState(shippingAddress?.city) // shippingAddress.city\r\n  const [postalCode, setPostalCode] = useState(shippingAddress?.postalCode) // shippingAddress.postalCode\r\n  const [country, setCountry] = useState(shippingAddress?.country) // shippingAddress.country\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2/>\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address ? address : ''}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          >\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Enter Your City'\r\n            value={city ? city : ''}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          >\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Enter Postal Code'\r\n            value={postalCode ? postalCode : ''}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          >\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Enter your country'\r\n            value={country ? country : ''}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          >\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n\r\n      </Form>   \r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\CheckoutSteps.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\PaymentScreen.js",["197"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  if (!shippingAddress?.address) { // antes = !shippingAddress.adress\r\n      history.push('/shipping')\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(savePaymentMethod(paymentMethod))\r\n      history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='paypal'\r\n              name='paymentMethod'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            >\r\n\r\n            </Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\PlaceOrderScreen.js",["198","199","200"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, ListGroupItem } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n  const orderCreate = useSelector(state => state.orderCreate)\r\n  const {order, error, success} = orderCreate\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector(state => state.cart)\r\n\r\n  cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n  cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n  if(!cart.paymentMethod){\r\n    history.push('/payment')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({type: ORDER_CREATE_RESET })\r\n    }\r\n  }, [success, history])\r\n\r\n  const placeOrder = () => {\r\n    dispatch(createOrder({\r\n      orderItems: cart.cartItems,\r\n      shippingAddress: cart.shippingAddress,\r\n      paymentMethod: cart.paymentMethod,\r\n      itemsPrice: cart.itemsPrice,\r\n      shippingPrice: cart.shippingPrice,\r\n      taxPrice: cart.taxPrice,\r\n      totalPrice: cart.totalPrice,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress?.address}, {cart.shippingAddress?.city}, \r\n                {' '}\r\n                {cart.shippingAddress?.postalCode},\r\n                {' '}\r\n                {cart.shippingAddress?.country}\r\n\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                Your Cart is Empty\r\n              </Message> : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image src={item.image} alt={item.name} fluid rounded/>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n          </ListGroup>\r\n\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item> \r\n\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item className=\"d-grid gap-2\">\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block-level'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\reducers\\orderReducers.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\constants\\orderConstants.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\actions\\orderActions.js",["201","202","203"],"import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,  \r\n\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nimport {CART_CLEAR_ITEMS} from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_CREATE_REQUEST\r\n      })\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n          `/api/orders/add/`,\r\n          order,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_CREATE_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n      dispatch({\r\n        type: CART_CLEAR_ITEMS,\r\n        payload: data\r\n      })\r\n\r\n      localStorage.removeItem('cartItems')\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_CREATE_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_DETAILS_REQUEST\r\n      })\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/orders/${id}/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_DETAILS_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_DETAILS_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_PAY_REQUEST\r\n      })\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n          `/api/orders/${id}/pay/`,\r\n          paymentResult,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_PAY_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_PAY_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_DELIVER_REQUEST\r\n      })\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n          `/api/orders/${order._id}/deliver/`,\r\n          {},\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_DELIVER_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_DELIVER_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_LIST_MY_REQUEST\r\n      })\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/orders/myorders/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_LIST_MY_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_LIST_MY_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_LIST_REQUEST\r\n      })\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/orders/`,\r\n          config\r\n      )\r\n\r\n      dispatch({\r\n          type: ORDER_LIST_SUCCESS,\r\n          payload: data\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_LIST_FAIL,\r\n          payload: error.response && error.response.data.detail\r\n              ? error.response.data.detail\r\n              : error.message,\r\n      })\r\n  }\r\n}","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\OrderScreen.js",["204","205"],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\UserListScreen.js",["206"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\UserEditScreen.js",["207"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser} from '../actions/userActions'\r\nimport { USER_UPDATE_RESET,  } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({match, history}) {\r\n\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error, loading, user } = userDetails\r\n\r\n  const userUpdate = useSelector(state => state.userUpdate)\r\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate} = userUpdate\r\n\r\n  useEffect(() => {\r\n\r\n    if(successUpdate) {\r\n      dispatch({type: USER_UPDATE_RESET})\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if(!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId))\r\n      } else{\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    } \r\n\r\n  }, [user, userId, successUpdate, history])\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(updateUser({_id: user._id, name, email, isAdmin}))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Link to='/admin/userlist'>\r\n          Go Back\r\n        </Link>\r\n\r\n       <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n          <Form onSubmit={submitHandler}>\r\n\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Your Name</Form.Label>\r\n            <Form.Control          \r\n              type='name'\r\n              placeholder='Enter Name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n  \r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n  \r\n          <Form.Group controlId='isadmin'>\r\n            <Form.Check\r\n              type='checkbox'\r\n              label='Is Admin'\r\n              checked={isAdmin}\r\n              onChange={(e) => setIsAdmin(e.target.checked)}\r\n            >\r\n            </Form.Check>\r\n          </Form.Group>\r\n  \r\n          <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}                \r\n        </FormContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ProductListScreen.js",["208"],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\ProductEditScreen.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\screens\\OrderListScreen.js",["209"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th>DETAILS</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                              {orders.map(order => (\r\n                                  <tr key={order._id}>\r\n                                      <td>{order._id}</td>\r\n                                      <td>{order.user && order.user.name}</td>\r\n                                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                                      <td>$ {order.totalPrice}</td>\r\n\r\n                                      <td>{order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                      ) : (\r\n                                              <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                          )}\r\n                                      </td>\r\n\r\n                                      <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                      ) : (\r\n                                              <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                          )}\r\n                                      </td>\r\n\r\n                                      <td> \r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                          <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                          </Button>\r\n                                        </LinkContainer>\r\n                                      </td>\r\n                                  </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\SearchBox.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\Paginate.js",[],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\ProductCarousel.js",["210","211"],"G:\\DZ DEVELOPER\\React-and-Django-with-Python\\frontend\\src\\components\\logo.js",[],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":3,"column":34,"nodeType":"218","messageId":"219","endLine":3,"endColumn":37},{"ruleId":"216","severity":1,"message":"220","line":3,"column":52,"nodeType":"218","messageId":"219","endLine":3,"endColumn":57},{"ruleId":"216","severity":1,"message":"221","line":4,"column":25,"nodeType":"218","messageId":"219","endLine":4,"endColumn":29},{"ruleId":"216","severity":1,"message":"222","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"223","line":114,"column":17,"nodeType":"218","messageId":"219","endLine":114,"endColumn":21},{"ruleId":"216","severity":1,"message":"224","line":21,"column":3,"nodeType":"218","messageId":"219","endLine":21,"endColumn":28},{"ruleId":"216","severity":1,"message":"225","line":31,"column":3,"nodeType":"218","messageId":"219","endLine":31,"endColumn":20},{"ruleId":"216","severity":1,"message":"226","line":36,"column":3,"nodeType":"218","messageId":"219","endLine":36,"endColumn":20},{"ruleId":"216","severity":1,"message":"221","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":14},{"ruleId":"216","severity":1,"message":"227","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"221","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":14},{"ruleId":"216","severity":1,"message":"227","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"222","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"228","line":2,"column":52,"nodeType":"218","messageId":"219","endLine":2,"endColumn":65},{"ruleId":"229","severity":1,"message":"230","line":34,"column":6,"nodeType":"231","endLine":34,"endColumn":24,"suggestions":"232"},{"ruleId":"216","severity":1,"message":"233","line":14,"column":3,"nodeType":"218","messageId":"219","endLine":14,"endColumn":18},{"ruleId":"216","severity":1,"message":"234","line":19,"column":3,"nodeType":"218","messageId":"219","endLine":19,"endColumn":22},{"ruleId":"216","severity":1,"message":"235","line":24,"column":3,"nodeType":"218","messageId":"219","endLine":24,"endColumn":22},{"ruleId":"216","severity":1,"message":"228","line":2,"column":52,"nodeType":"218","messageId":"219","endLine":2,"endColumn":65},{"ruleId":"229","severity":1,"message":"236","line":64,"column":6,"nodeType":"231","endLine":64,"endColumn":60,"suggestions":"237"},{"ruleId":"216","severity":1,"message":"222","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"229","severity":1,"message":"238","line":42,"column":6,"nodeType":"231","endLine":42,"endColumn":44,"suggestions":"239"},{"ruleId":"216","severity":1,"message":"222","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"222","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"229","severity":1,"message":"240","line":17,"column":6,"nodeType":"218","endLine":17,"endColumn":14},{"ruleId":"229","severity":1,"message":"238","line":17,"column":6,"nodeType":"218","endLine":17,"endColumn":14,"suggestions":"241"},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'USER_DELETE_RESET' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'useEffect' is defined but never used.","'ListGroupItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["244"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["246"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.",["247"],"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"256","text":"257"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"258","text":"259"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"260","text":"261"},"Update the dependencies array to be: [dispatch]",{"range":"262","text":"263"},[1261,1279],"[success, history, order._id, dispatch]",[2274,2328],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1370,1408],"[user, userId, successUpdate, history, dispatch]",[590,598],"[dispatch]"]